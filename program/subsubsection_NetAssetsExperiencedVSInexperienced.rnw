<<read rd 1 Table 8a, eval = F>>=
library(readstata13)
fnlv0 <- list.files("C:/data/GUK/received/cleaned_by_RA/raw_source_files/P1_Check_20170513/2012/", 
  pattern = "8a", full.names = T)
fnlv <- read.dta13(fnlv0, generate.factors = T, nonint.factors = T)
fnlv <- data.table(fnlv)
<<extract cattle rearing experiences, eval = F>>=
# Page 20 of rd 1 questionnaire
# ownership 
# s8a_a_1: own cow/ox/goat
# s8a_a_2: own adult cow
# s8a_a_3: own adult ox
# s8a_a_4: own calf
# adi lease 
# s8a_b_7: lease cow/ox/goat
# s8a_b_8: lease adult cow
# s8a_b_9: lease adult ox
# s8a_b_10: lease calf
# s8a_b_26: last year of adi
# s8a_b_27_1: reason discontinuing adi
# s8a_b_27_2: reason discontinuing adi, other
setnames(fnlv, paste0("s8a_a_", 1:4), paste0("Own", c("Lvstk", "Cow", "Ox", "Calf")))
setnames(fnlv, paste0("s8a_b_", 7:10), paste0("LeaseIn", c("Lvstk", "Cow", "Ox", "Calf")))
setnames(fnlv, paste0("s8a_a_", c(26, "27_1", "27_2")), 
  c("YearsSinceLastAdi", "ReasonStopAdi", "ReasonStopAdiOther"))
fnlv[, OwnCattle := 0L]
fnlv[grepl("Y", OwnLvstk)&(OwnCow>0|OwnOx>0|OwnCalf>0), 
  OwnCattle := 1L]
fnlv[, LeaseInCattle := 0L]
fnlv[grepl("Y", LeaseInLvstk)&(LeaseInCow>0|LeaseInOx>0|LeaseInCalf>0), 
  LeaseInCattle := 1L]
fnlv[, LeaseInCattle := sum(LeaseInCattle)>0, by = hh_id]
fnlv[, OwnCattle := sum(OwnCattle)>0, by = hh_id]
addmargins(table0(fnlv[, .(LeaseInCattle, YearsSinceLastAdi)]))
addmargins(table0(fnlv[!(LeaseInCattle), .(ReasonStopAdi, ReasonStopAdiOther)]))
# copy nonNA in YearsSinceLastAdi within HH
fnlv[hh_id %in% hh_id[!is.na(YearsSinceLastAdi)], 
  YearsSinceLastAdi := YearsSinceLastAdi[!is.na(YearsSinceLastAdi)][1], by = hh_id]
LvEx <- unique(fnlv[, .(hh_id, OwnCattle, LeaseInCattle, YearsSinceLastAdi)])
setnames(LvEx, "hh_id", "hhid")
saveRDS(LvEx, paste0(pathsaveHere, "LivestockExperienceAtBaseline.rds"))
<<compare it with livestock holding data>>=
# below data is created in ReadTrimLivestockANCOVA.R in livestock regression preparation
lvo0 <- readRDS(paste0(pathsaveHere, "NumCowRegData.rds"))
LvEx <- readRDS(paste0(pathsaveHere, "LivestockExperienceAtBaseline.rds"))
lv00 <- unique(lvo0[, .(hhid, o800, NumCows0)])
setkey(lv00, hhid); setkey(LvEx, hhid)
lvLv <- LvEx[lv00]
# NAs in LeaseInCattle, OwnCattle are due to missing obs in stata file: fnlv0
addmargins(table0(lvLv[o800==1L, .(NumCows0, LeaseInCattle)]))
addmargins(table0(lvLv[o800==1L, .(YearsSinceLastAdi, LeaseInCattle)]))
@
Even LeaseInCattle $==$ 0 \& OwnCattle $==$ 0, some had Adi experiences.
<<>>=
addmargins(table0(lvLv[o800==1L & LeaseInCattle == 0, .(YearsSinceLastAdi, OwnCattle)]))
@
Recode to Adi if OwnCattle == 0 \& $!$is.na(YearsSinceLastAdi). This means, \textsf{LeaseInCattle} == 1 if OwnCattle = 0 but has experience of Adi in last 3 years.
<<>>=
#lvLv[OwnCattle == 0L & !is.na(YearsSinceLastAdi), LeaseInCattle := 1L]
@
If we (and we will) assume that the \textsf{NumCows0} (computed from \textsf{"abu\_livestockownershipupdated.dta}) as the truth, there are \Sexpr{nrow(lvLv[o800==1L & NumCows0 == 0 & OwnCattle == 1L])} false positives in \textsf{OwnCattle} (falsely reporting cattle ownership at baseline). 
<<>>=
addmargins(table0(lvLv[o800==1L, .(NumCows0, OwnCattle)]))
@
NumCows are computed in \textsf{read\_clean\_data.rnw} by:
\begin{screen}
\verb+xloL[, NumCows := as.integer(NA)]+\\
\verb+xloL[grepl("ow", LVcode), NumCows := as.integer(number_owned)]+\\
\verb+xloL[, NumCows := NumCows[grepl("ow", LVcode)], by = .(hhid, survey)]+
\end{screen}
\textsf{xloL} is the raw data file \textsf{"abu\_livestockownershipupdated.dta}. 

	We will correct Table 8a baseline data such that it becomes consistent with \textsf{"abu\_livestockownershipupdated.dta}. 
\begin{screen}
\verb+lvLv[NumCows0 == 0 & OwnCattle == 1L, OwnCattle := 0L]+\\
\verb+lvLv[NumCows0 > 0 & is.na(OwnCattle), OwnCattle := 1L]+\\
\verb+lvLv[, NumCows0 := NULL]+
\end{screen}
We will also correct \textsf{LeaseInCattle} from NA to 0, if \textsf{NumCows0} $>0$ (2 cases). Save it as \textsf{lvLv}, and use it in estimation.
<<correct Table 8a data>>=
lvLv[NumCows0 == 0 & OwnCattle == 1L, OwnCattle := 0L]
lvLv[NumCows0 > 0 & is.na(OwnCattle), OwnCattle := 1L]
lvLv[NumCows0 > 0 & is.na(LeaseInCattle), LeaseInCattle := 0L]
lvLv[, NumCows0 := NULL]
lvLv[OwnCattle == 0L & !is.na(YearsSinceLastAdi), LeaseInCattle := 1L]
addmargins(table0(lvLv[o800==1L & LeaseInCattle == 0L, .(YearsSinceLastAdi, OwnCattle)]))
addmargins(table0(lvLv[o800==1L, .(LeaseInCattle, OwnCattle)]))
saveRDS(lvLv, paste0(pathsaveHere, "LivestockExperienceAtBaselineCorrected.rds"))
@


<<merge assets livestock experience data, cache = F, child='c:/data/GUK/analysis/program/MergeAllNetAssetsExperienceANCOVA.rnw'>>=
#  source(paste0(pathprogram, "MergeAllNetAssetsExperienceANCOVA.R"))
#  This uses NetAssets, not NarrowNetAssets or BroadNetAssets
@
<<Net asset experience set parameters original HHs>>=
FileName <- "NetAssetsExperience"
FileNameHeader <- c("", "PovertyStatus", "Attributes",
  "TimeVarying", "TimeVaryingAttributes",
  "TimeVaryingPovertyStatus", "TimeVaryingPovertyStatusAttributes")
regsuffixes <- c("", "P", "a", "T", "Ta", "TP", "TPa")
listheader <- paste0("nae", regsuffixes)
<<asset net asset experience regression select covariates original HHs>>=
source(paste0(pathprogram, "NetAssetExperienceCovariateSelectionANCOVA2.R"))
<<get jay from net assets experience covariate selection>>=
# number of regressions per specification k=1, ..., length(regsuffixes)
jay <- max(as.numeric(gsub("incl", "", ls(pattern = "^incl\\d"))))
NeAE1 <- readRDS(paste0(pathsaveHere, "NetAssetsExperienceRegData.rds"))
NeAE1[, grepout("Net2|^Narr", colnames(NeAE1)) := NULL]
DataToUse1 <- DataToUse2 <- rep("NeAE1", jay)
# Previously, Rd 1-4 diff: DataToUse2 <- rep("NeA2", jay)
Addseparatingcols <- NULL; Separatingcolwidth <- NULL
Separatingcoltitle <- NULL
Regressands <- rep("NetValue", jay)
tableboxwidth <- 4.5
exclheader <- paste0("excl", regsuffixes)
inclheader <- gsub("ex", "in", exclheader)
<<display covariates net asset experience ancova, cache = F, warning = F, eval = F, child='c:/data/GUK/analysis/program/DisplayCovariates.rnw'>>=
<<narrow net assets experience ANCOVA estimation>>=
if (Only800) NeAE1 <- NeAE1[o800 == 1L, ]
dig.depmean <- 0
AddMeanStdColumn <- UseRawDataForDestat <- T
source(paste0(pathprogram, "ANCOVAEstimationFile3.R"))
@
<<estimate with subsamples by experienced inexperienced>>=
FileName0 <- "NetAssetsByExperience"
FileNameHeader <- c("", "PovertyStatus", "Attributes",
  "TimeVarying", "TimeVaryingAttributes",
  "TimeVaryingPovertyStatus", "TimeVaryingPovertyStatusAttributes")
NeAE1 <- readRDS(paste0(pathsaveHere, "NetAssetsExperienceRegData.rds"))
NeAE1[, grepout("Net2|^Narr", colnames(NeAE1)) := NULL]
if (Only800) NeAE1 <- NeAE1[o800 == 1L, ]
NeAE1o <- NeAE1[OwnCattle0 == 1L, ]
NeAE1a <- NeAE1[AdiCattle0 == 1L, ]
NeAE1n <- NeAE1[!(OwnCattle0 == 1L | AdiCattle0 == 1L), ]
Addseparatingcols <- NULL; Separatingcolwidth <- NULL
Separatingcoltitle <- NULL
tableboxwidth <- 4.5
dig.depmean <- 0
FileNameHeader <- c("", "PovertyStatus", "Attributes",
  "TimeVarying", "TimeVaryingAttributes",
  "TimeVaryingPovertyStatus", "TimeVaryingPovertyStatusAttributes")
regsuffixes <- c("", "P", "a", "T", "Ta", "TP", "TPa")
exclheader <- paste0("excl", regsuffixes)
inclheader <- gsub("ex", "in", exclheader)
for (mm in c("a", "o", "n"))
{
  listheader <- paste0("naBe", mm, regsuffixes)
  FileName <- paste0(FileName0, mm)
  source(paste0(pathprogram, "NetAssetByExperienceCovariateSelectionANCOVA2.R"))
  # No dummyHadCow or NumCattle0, reg spec m = 1, .., jay(= 4)
  jay <- max(as.numeric(gsub("incl", "", ls(pattern = "^incl\\d"))))
  DataToUse1 <- DataToUse2 <- rep(paste0("NeAE1", mm), jay)
  Regressands <- rep("NetValue", jay)
  AddMeanStdColumn <- UseRawDataForDestat <- T
  source(paste0(pathprogram, "ANCOVAEstimationFile3.R"))
}
centerBox <- 1.1
for (k in 1:length(listheader)) {
  etba <- get(paste0("etba", k)) # adi subsample
  etbo <- get(paste0("etbo", k)) # own subsample
  etbn <- get(paste0("etbn", k)) # no adi nor own subsample
  etb1 <- cbind(
    etba[, 1:2], etbo[, 2], etbn[, 2], 
    etba[, 3], etbo[, 3], etbn[, 3]
    )
  etb2 <- cbind(
    etba[, c(1, 4)], etbo[, 4], etbn[, 4], 
    etba[, 5], etbo[, 5], etbn[, 5]
    )
  ltb1 <- latextab(etb1, 
    hleft = "\\scriptsize\\hfil$", 
    hcenter = c(3.25, rep(centerBox, ncol(etb1)-1)), hright = "$", 
    headercolor = "gray80", adjustlineskip = "-.6ex", delimiterline= NULL,
    alternatecolor2 = "gray90", 
    addseparatingcols = 3, 
    separatingcolwidth = .05, 
    separatingcoltitle = c("mean/std", "(1)"), 
    addsubcoltitlehere = T)
  ltb2 <-  latextab(etb2, 
    hleft = "\\scriptsize\\hfil$", 
    hcenter = c(3.25, rep(centerBox, ncol(etb2)-1)), hright = "$", 
    headercolor = "gray80", adjustlineskip = "-.6ex", delimiterline= NULL,
    alternatecolor2 = "gray90", 
    addseparatingcols = c(3), 
    separatingcolwidth = .05, 
    separatingcoltitle = c("(2)", "(3)"), 
    addsubcoltitlehere = T)
#  ltb1[2] <- paste0(ltb1[2], "\\rowcolor{gray80}")
#  ltb2[2] <- paste0(ltb2[2], "\\rowcolor{gray80}")
  ltb1 <- c(
    ltb1[1:3, ],
    paste(
      "\\rowcolor{gray80}&", 
      paste(
        c(paste("\\makebox[", centerBox, "cm]{\\scriptsize\\sf\\hfil", 
          c("Adi", "Own", "None"), "}")
        , "",
        paste("\\makebox[", centerBox, "cm]{\\scriptsize\\sf\\hfil", 
          c("Adi", "Own", "None"), "}"))
        , collapse = "&")
      , "\\\\[-.0ex]", collapse = ""),
    ltb1[-(1:4), ]
    )
  ltb2 <- c(
    ltb2[1:3, ],
    paste(
      "\\rowcolor{gray80}&", 
      paste(
        c(paste("\\makebox[", centerBox, "cm]{\\scriptsize\\sf\\hfil", 
          c("Adi", "Own", "None"), "}")
        , "",
        paste("\\makebox[", centerBox, "cm]{\\scriptsize\\sf\\hfil", 
          c("Adi", "Own", "None"), "}"))
        , collapse = "&")
      , "\\\\[-.6ex]", collapse = ""),
    ltb2[-(1:4), ]
    )
  write.tablev(ltb1, 
    paste0(pathsaveHere, FileName0, 1, 
      FileNameHeader[k], "ANCOVAEstimationResults.tex")
    , colnamestrue = F)
  write.tablev(ltb2, 
    paste0(pathsaveHere, FileName0, 2, 
      FileNameHeader[k], "ANCOVAEstimationResults.tex")
    , colnamestrue = F)
}
@

\Sexpr{knit_child(paste0(pathprogram, "ANCOVANetAssetsExperienceResults.rnw"))}
\Sexpr{knit_child(paste0(pathprogram, "ANCOVANetAssetsByExperienceResults.rnw"))}

